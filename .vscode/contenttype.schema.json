{
  "$id": "https://api.cms.optimizely.com/preview3/schema/ContentType",
  "type": "object",
  "title": "ContentType",
  "properties": {
    "key": {
      "maxLength": 255,
      "minLength": 2,
      "pattern": "^[A-Za-z][_0-9A-Za-z]+$",
      "type": "string",
      "description": "The key that identifies this ContentType."
    },
    "displayName": {
      "maxLength": 255,
      "type": "string",
      "description": "The display name of this ContentType."
    },
    "description": {
      "maxLength": 255,
      "type": "string",
      "description": "A description of this ContentType."
    },
    "baseType": {
      "type": "string",
      "description": "The base type of this ContentType.\r\nIgnored for contracts; required for all other content types.",
      "nullable": true
    },
    "source": {
      "type": "string",
      "description": "A string that is used to indicate the source of this ContentType.",
      "readOnly": true
    },
    "sortOrder": {
      "type": "integer",
      "description": "A value that is used to when sorting ContentType instances.",
      "format": "int32"
    },
    "mayContainTypes": {
      "type": "array",
      "items": {
        "maxLength": 255,
        "minLength": 2,
        "pattern": "^[_A-Za-z][:_0-9A-Za-z]+$",
        "type": "string"
      },
      "description": "Provides a set of content types that can be created in containers of this type"
    },
    "mediaFileExtensions": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Provides a set of media file extensions that this content type can handle."
    },
    "compositionBehaviors": {
      "type": "array",
      "items": {
        "enum": [
          "sectionEnabled",
          "elementEnabled",
          "formsElementEnabled"
        ],
        "type": "string",
        "description": "Represent a Composition behavior for a ContentType."
      },
      "description": "Provides a set of composition behaviors specifying how this content type can be used within compositions."
    },
    "created": {
      "type": "string",
      "description": "A timestamp indicating when this ContentType was first created.",
      "format": "date-time",
      "readOnly": true
    },
    "lastModified": {
      "type": "string",
      "description": "Indicates the last time this content type was modified.",
      "format": "date-time",
      "readOnly": true
    },
    "lastModifiedBy": {
      "type": "string",
      "description": "The username of the user that made the latest modification to this ContentType.",
      "readOnly": true
    },
    "properties": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/ContentTypeProperty"
      },
      "description": "Dictionary with all custom properties of this ContentType."
    }
  },
  "description": "A writable implementation of an ContentType.",
  "definitions": {
    "EnumerationValue": {
      "required": [
        "displayName",
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "oneOf": [
            {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            {
              "type": "string",
              "nullable": true
            },
            {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          ],
          "description": "The defined enumeration value. Value type must match the property type."
        },
        "displayName": {
          "minLength": 1,
          "type": "string",
          "description": "The display name of the enumeration value."
        }
      },
      "description": "Describes one value in an enumeration of possible values."
    },
    "ImageDescriptor": {
      "type": "object",
      "properties": {
        "width": {
          "minimum": 0,
          "type": "integer",
          "description": "The image width in pixels.",
          "format": "int32"
        },
        "height": {
          "minimum": 0,
          "type": "integer",
          "description": "The image height in pixels.",
          "format": "int32"
        },
        "pregenerated": {
          "type": "boolean",
          "description": "Indicates if the image should be pre-generated when a new image is uploaded rather than when first requested."
        }
      },
      "description": "Instruction for generating an alternative image from the main binary of an image content item."
    },
    "ArrayItem": {
      "type": "object",
      "properties": {
        "type": {
          "maxLength": 50,
          "enum": [
            "string",
            "url",
            "boolean",
            "integer",
            "float",
            "dateTime",
            "contentReference",
            "content",
            "binary",
            "link",
            "richText",
            "json",
            "component"
          ],
          "type": "string",
          "description": "Gets the data type for the list item property."
        },
        "format": {
          "type": "string",
          "description": "The key of the PropertyFormat that this property item is an instance of.",
          "nullable": true
        },
        "contentType": {
          "maxLength": 255,
          "minLength": 2,
          "pattern": "^[_A-Za-z][:_0-9A-Za-z]+$",
          "type": "string",
          "description": "The key of the content type that a property with 'type': 'component' may contain.",
          "nullable": true
        },
        "minimum": {
          "oneOf": [
            {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            {
              "type": "string",
              "nullable": true
            },
            {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          ],
          "description": "The minimum value that properties of this type should be able to contain. Value type must match the type of the array item."
        },
        "maximum": {
          "oneOf": [
            {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            {
              "type": "string",
              "nullable": true
            },
            {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          ],
          "description": "The maximum value that properties of this type should be able to contain. Value type must match the type of the array item."
        },
        "minLength": {
          "minimum": 0,
          "type": "integer",
          "description": "The minimum string length that list items of this type should be able to contain.",
          "format": "int32",
          "nullable": true
        },
        "maxLength": {
          "minimum": 0,
          "type": "integer",
          "description": "The maximum string length that list items of this type should be able to contain.",
          "format": "int32",
          "nullable": true
        },
        "pattern": {
          "type": "string",
          "description": "Regular expression pattern that limits what strings that list items of this type should be able to contain.",
          "format": "regex",
          "nullable": true
        },
        "enum": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnumerationValue"
          },
          "description": "A list of possible values that properties of this type should be able to contain.",
          "nullable": true
        },
        "allowedTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Specifies which content types and base types this property is allowed to contain."
        },
        "restrictedTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Specifies which content types and base types this property cannot contain."
        }
      },
      "description": "Describes the list item of a content type property of type 'array'."
    },
    "ContentTypeProperty": {
      "type": "object",
      "properties": {
        "type": {
          "maxLength": 50,
          "enum": [
            "string",
            "url",
            "boolean",
            "integer",
            "float",
            "dateTime",
            "contentReference",
            "content",
            "binary",
            "link",
            "richText",
            "json",
            "array",
            "component"
          ],
          "type": "string",
          "description": "Gets the data type for the property."
        },
        "format": {
          "type": "string",
          "description": "The key of the PropertyFormat that this ContentTypeProperty is an instance of.",
          "nullable": true
        },
        "contentType": {
          "maxLength": 255,
          "minLength": 2,
          "pattern": "^[_A-Za-z][:_0-9A-Za-z]+$",
          "type": "string",
          "description": "The key of the content type that a property with 'type': 'component' may contain.",
          "nullable": true
        },
        "displayName": {
          "maxLength": 255,
          "type": "string",
          "description": "The display name of this ContentTypeProperty."
        },
        "description": {
          "maxLength": 2000,
          "type": "string",
          "description": "A description of this ContentTypeProperty."
        },
        "localized": {
          "type": "boolean",
          "description": "Indicates if a property instance of this type should be localized for each locale\r\nor if values are shared between all locales."
        },
        "required": {
          "type": "boolean",
          "description": "Indicates if a property instance of this type must always be assigned a value."
        },
        "group": {
          "type": "string",
          "description": "A reference to the PropertyGroup that this ContentTypeProperty is part of.\r\nIf this value is empty, a group may be assigned by the system."
        },
        "sortOrder": {
          "type": "integer",
          "description": "An value that is used to when sorting ContentTypeProperty instances.",
          "format": "int32"
        },
        "indexingType": {
          "enum": [
            "disabled",
            "queryable",
            "searchable"
          ],
          "type": "string",
          "description": "Indicates how should this property will be indexed in the search engine.\r\nIf this value is not explicitly set, the property will be indexed using default indexing setting of the search engine."
        },
        "minimum": {
          "oneOf": [
            {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            {
              "type": "string",
              "nullable": true
            },
            {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          ],
          "description": "The minimum value that properties of this type should be able to contain. Value type must match the type of the property."
        },
        "maximum": {
          "oneOf": [
            {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            {
              "type": "string",
              "nullable": true
            },
            {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          ],
          "description": "The minimum value that properties of this type should be able to contain. Value type must match the type of the property."
        },
        "enum": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnumerationValue"
          },
          "description": "A list of possible values that properties of this type should be able to contain.",
          "nullable": true
        },
        "imageDescriptor": {
          "$ref": "#/definitions/ImageDescriptor"
        },
        "minLength": {
          "minimum": 0,
          "type": "integer",
          "description": "The minimum string length that properties of this type should be able to contain.",
          "format": "int32",
          "nullable": true
        },
        "maxLength": {
          "minimum": 0,
          "type": "integer",
          "description": "The maximum string length that properties of this type should be able to contain.",
          "format": "int32",
          "nullable": true
        },
        "pattern": {
          "type": "string",
          "description": "Regular expression pattern that limits what value that a string type property should be able to contain.",
          "format": "regex",
          "nullable": true
        },
        "minItems": {
          "minimum": 0,
          "type": "integer",
          "description": "Optional minimum list length validation.",
          "format": "int32",
          "nullable": true
        },
        "maxItems": {
          "minimum": 0,
          "type": "integer",
          "description": "Optional maximum list length validation.",
          "format": "int32",
          "nullable": true
        },
        "allowedTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Specifies which content types and base types these property items are allowed to contain."
        },
        "restrictedTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Specifies which content types and base types these property items cannot contain."
        },
        "items": {
          "$ref": "#/definitions/ArrayItem"
        }
      },
      "description": "Describes a property of a ContentType in the CMS."
    }
  }
}